/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'com.sample.remoting.akka.MyApp'

def guavaVersion = '24.0-jre'
def akkaActor212Ver = "2.5.11"
def slf4jVer = "1.7.25"
def logbackVer = "1.2.3"
def testNgVersion = '6.+'
def jacksonVer = '2.9.4'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile "com.google.guava:guava:${guavaVersion}"

    // Akka-actor.
    compile "com.typesafe.akka:akka-actor_2.12:${akkaActor212Ver}"
    compile "com.typesafe.akka:akka-slf4j_2.12:${akkaActor212Ver}"

    // Akka-actor remoting.
    compile "com.typesafe.akka:akka-remote_2.12:${akkaActor212Ver}"

    // Jackson for JSON processing.
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: jacksonVer

    // Slf4j-api.
    compile group: "org.slf4j", name: "slf4j-api", version: "${slf4jVer}"

    // Logback as Sfl4j-api implementation.
    compile group: "ch.qos.logback", name: "logback-classic", version: "${logbackVer}"
    compile group: "ch.qos.logback", name: "logback-core", version: "${logbackVer}"

    // Test dependencies.
    testCompile "com.typesafe.akka:akka-testkit_2.12:${akkaActor212Ver}"
    testCompile group: "org.testng", name: "testng", version: "${testNgVersion}"
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

run {
    if (project.hasProperty("plusdaemon")) {
        args "plusdaemon"
    } else if (project.hasProperty("fire")) {
        args "fire"
    } else {
        // Deliberately left blank.
    }
}
